"""Reset all relationships

Revision ID: 5dc643d42aec
Revises: 
Create Date: 2025-01-18 00:33:29.458239

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5dc643d42aec'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('price_update', schema=None) as batch_op:
        batch_op.add_column(sa.Column('old_price', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('new_price', sa.Float(), nullable=False))
        batch_op.add_column(sa.Column('updated_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('temp_product_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('invoice_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('updated_by_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('old_selling_price')
        batch_op.drop_column('new_margin')
        batch_op.drop_column('old_cost_price')
        batch_op.drop_column('new_selling_price')
        batch_op.drop_column('created_at')
        batch_op.drop_column('new_cost_price')
        batch_op.drop_column('price_tag_updated')
        batch_op.drop_column('status')
        batch_op.drop_column('completed_at')
        batch_op.drop_column('old_margin')

    with op.batch_alter_table('temp_product', schema=None) as batch_op:
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('temp_product', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))

    with op.batch_alter_table('price_update', schema=None) as batch_op:
        batch_op.add_column(sa.Column('old_margin', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('price_tag_updated', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('new_cost_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('new_selling_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('old_cost_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('new_margin', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('old_selling_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.alter_column('updated_by_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('invoice_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('temp_product_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('new_price')
        batch_op.drop_column('old_price')

    # ### end Alembic commands ###
